<?xml version="1.0"?>

<project name="Sun Games Initiative Client Technologies" basedir="." default="all">
    <target name="init">
        <!-- If we are running in windows, set dx8 property to true -->
        <condition property="windows" >
            <os family="windows" />
        </condition>
        
        <!-- If we are running in linux, set linux property to true -->
        <condition property="linux" >
            <!--<os family="unix" />-->
            <os name="linux" />
        </condition>
		
		<!-- If we are running in Mac OS X, set osx property to true -->
		<condition property="osx" >
			<and>
				<os family="mac" />
				<os family="unix" />
			</and>
		</condition>
    </target>

	<target name="runtest" depends="dist">
		<java classname="${mainclass}" 
              fork="true" failonerror="true" dir=".">
            <classpath>
				<pathelement location="dist/jinput.jar"/>
				<pathelement location="dist/jinput-test.jar"/>
            </classpath>
			<jvmarg value="-Djava.library.path=dist"/>
		</java>
	</target>

	<target name="texttest">
		<antcall target="runtest">
			<param name="mainclass" value="net.java.games.input.test.ControllerTextTest"/>
		</antcall>
	</target>

    <target name="readtest" depends="init,all" description="Try running it.">
		<antcall target="runtest">
			<param name="mainclass" value="net.java.games.input.test.ControllerReadTest"/>
		</antcall>
	</target>

    <target name="rumbletest" depends="init,all" description="Try running it.">
		<antcall target="runtest">
			<param name="mainclass" value="net.java.games.input.test.RumbleTest"/>
		</antcall>
	</target>

	<macrodef name="iterate">
		<attribute name="target"/>
		<sequential>
			<subant target="@{target}">
				<fileset file="coreAPI/build.xml"/>
				<fileset file="plugins/linux/build.xml"/>
				<fileset file="plugins/windows/build.xml"/>
				<fileset file="plugins/OSX/build.xml"/>
				<fileset file="plugins/awt/build.xml"/>
			</subant>
		</sequential>
	</macrodef>

	<target name="clean">
		<iterate target="clean"/>
		<delete dir="dist" failonerror="no"/>
	</target>

	<target name="all" depends="dist">
	</target>

	<target name="javadoc" depends="init">
		<iterate target="javadoc"/>
	</target>

    <target name="dist" depends="init" description="Build the distribution file for this system">
		<iterate target="all"/>
        <mkdir dir="dist"/>
		<jar jarfile="dist/jinput.jar" compress="true">
			<fileset dir="coreAPI/classes">
				<include name="**/*.class"/>
				<exclude name="**/test/*.class"/>
			</fileset>
			<fileset dir="plugins/linux/classes">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="plugins/OSX/classes">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="plugins/awt/classes">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="plugins/windows/classes">
				<include name="**/*.class"/>
			</fileset>
			<zipfileset src="lib/jutils.jar" includes="**/*.class"/>
		</jar>
		<copy todir="dist">
			<fileset file="coreAPI/bin/jinput-test.jar"/>
			<fileset dir="plugins/linux/bin" includes="*so"/>
			<fileset dir="plugins/OSX/bin" includes="*jnilib"/>
			<fileset dir="plugins/windows/bin" includes="*dll"/>
		</copy>
    </target>
	
	<target name="simple_dist" depends="dist,simple_windows,simple_linux,simple_osx" description="Build the simple jars for each platform"/>
	
	<target name="simple_linux" depends="dist" description="Build the simple linux jar" if="linux">
		<jar jarfile="dist/jinput-linux.jar" compress="true">
			<fileset dir="coreAPI/classes">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="plugins/linux/classes">
				<include name="**/*.class"/>
			</fileset>
			<zipfileset src="lib/jutils.jar" includes="**/*.class"/>
		</jar>
		<tar destfile="dist/jinput_linux.tgz" compression="gzip">
			<tarfileset dir=".">
				<include name="dist/jinput-linux.jar"/>
			</tarfileset>
			<tarfileset dir="plugins/linux/bin">
				<include name="*.so"/>
			</tarfileset>
		</tar>
	</target>

	<target name="simple_windows" depends="dist" description="Build the simple windows jar" if="windows">
		<jar jarfile="dist/jinput-windows.jar" compress="true">
			<fileset dir="coreAPI/classes">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="plugins/windows/classes">
				<include name="**/*.class"/>
			</fileset>
			<zipfileset src="lib/jutils.jar" includes="**/*.class"/>
		</jar>
		<zip destfile="dist/jinput_windows.zip">
			<zipfileset dir=".">
				<include name="dist/jinput-windows.jar"/>
			</zipfileset>
			<zipfileset dir="plugins/windows/bin">
				<include name="*.dll"/>
			</zipfileset>
		</zip>
	</target>

	<target name="simple_osx" depends="dist" description="Build the simple osx jar" if="osx">
		<jar jarfile="dist/jinput-osx.jar" compress="true">
			<fileset dir="coreAPI/classes">
				<include name="**/*.class"/>
			</fileset>
			<fileset dir="plugins/OSX/classes">
				<include name="**/*.class"/>
			</fileset>
			<zipfileset src="lib/jutils.jar" includes="**/*.class"/>
		</jar>
		<tar destfile="dist/jinput_osx.tgz" compression="gzip">
			<tarfileset dir=".">
				<include name="dist/jinput-osx.jar"/>
			</tarfileset>
			<tarfileset dir="plugins/OSX/bin">
				<include name="*.jnilib"/>
			</tarfileset>
		</tar>
	</target>
</project>
